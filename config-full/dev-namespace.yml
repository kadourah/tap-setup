#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:json", "json")

#@ if data.values.tap.devNamespace != "default" and data.values.tap.devNamespace != "":
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-group: "developer-namespace"
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"

---
#@ def config():
#@  return {
#@    "auths": {
#@      data.values.tap.registry.host: {
#@        "username": data.values.tap.credentials.registry.username,
#@        "password": data.values.tap.credentials.registry.password
#@      }
#@    }
#@  }
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-group: "registry-credentials"
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: #@ json.encode(config())

---
apiVersion: v1
kind: Secret
metadata:
  name: cosign-key-pair
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
type: Opaque
data:
  cosign.key: #@ data.values.tap.credentials.cosign.cosign_key
  cosign.password: #@ data.values.tap.credentials.cosign.cosign_password
  cosign.pub: #@ data.values.tap.credentials.cosign.cosign_pub
immutable: true
---
apiVersion: v1
kind: Secret
metadata:
  name: snyk-token-secret
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
data:
  snyk_token: #@ data.values.tap.credentials.snyk.token
---
apiVersion: v1
kind: Secret
metadata:
  name: carbonblack-token-secret
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
stringData:
  cbc_api_id: #@ data.values.tap.credentials.carbon_black_scanner.cbc_api_id
  cbc_api_key: #@ data.values.tap.credentials.carbon_black_scanner.cbc_api_key
  cbc_org_key: #@ data.values.tap.credentials.carbon_black_scanner.cbc_org_key
  cbc_saas_url: #@ data.values.tap.credentials.carbon_black_scanner.cbc_saas_url
---
apiVersion: v1
kind: Secret
metadata:
  name: git-ssh
  namespace: #@ data.values.tap.devNamespace
  annotations:
    tekton.dev/git-0: https://github.com
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
type: kubernetes.io/basic-auth
stringData:
  username: #@ data.values.tap.credentials.github.username
  password: #@ data.values.tap.credentials.github.token
---
apiVersion: v1
kind: Secret
metadata:
  name: azure-devops-ssh
  namespace: #@ data.values.tap.devNamespace
  annotations:
    tekton.dev/git-0: https://ynamadi@dev.azure.com
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
type: kubernetes.io/basic-auth
stringData:
  username: #@ data.values.tap.credentials.azure_devops.username
  password: #@ data.values.tap.credentials.azure_devops.access_token
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-registry
  namespace: #@ data.values.tap.devNamespace
  annotations:
    secretgen.carvel.dev/image-pull-secret: ""
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: e30K
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
secrets:
  - name: registry-credentials
  - name: git-ssh
  - name: cosign-key-pair
imagePullSecrets:
- name: tap-registry
- name: registry-credentials
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: default
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
rules:
- apiGroups: [source.toolkit.fluxcd.io]
  resources: [gitrepositories]
  verbs: ['*']
- apiGroups: [source.apps.tanzu.vmware.com]
  resources: [imagerepositories]
  verbs: ['*']
- apiGroups: [carto.run]
  resources: [deliverables, runnables]
  verbs: ['*']
- apiGroups: [kpack.io]
  resources: [images]
  verbs: ['*']
- apiGroups: [conventions.apps.tanzu.vmware.com]
  resources: [podintents]
  verbs: ['*']
- apiGroups: [""]
  resources: ['configmaps']
  verbs: ['*']
- apiGroups: [""]
  resources: ['pods']
  verbs: ['list']
- apiGroups: [tekton.dev]
  resources: [tasks, taskruns, pipelineruns]
  verbs: ['*']
- apiGroups: [tekton.dev]
  resources: [pipelines]
  verbs: ['list']
- apiGroups: [kappctrl.k14s.io]
  resources: [apps]
  verbs: ['*']
- apiGroups: [serving.knative.dev]
  resources: ['services']
  verbs: ['*']
- apiGroups: [servicebinding.io]
  resources: ['servicebindings']
  verbs: ['*']
- apiGroups: [services.apps.tanzu.vmware.com]
  resources: ['resourceclaims']
  verbs: ['*']
- apiGroups: [scanning.apps.tanzu.vmware.com]
  resources: ['imagescans', 'sourcescans']
  verbs: ['*']
- apiGroups: [apis.apps.tanzu.vmware.com]
  resources: ['apidescriptors']
  verbs: ['*']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: default
subjects:
  - kind: ServiceAccount
    name: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-permit-deliverable
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deliverable
subjects:
  - kind: ServiceAccount
    name: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-permit-workload
  namespace: #@ data.values.tap.devNamespace
  annotations:
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: workload
subjects:
  - kind: ServiceAccount
    name: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: service-binding-postgres
  annotations:
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
  labels:
    servicebinding.io/controller: "true"
rules:
  - apiGroups: ["sql.tanzu.vmware.com"]
    resources: ["postgres"]
    verbs: ["get", "list", "watch"]
#@ end
